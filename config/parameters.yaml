gps:
  delta_threshold_s: 1.0 # max time distance to the two measurements for interpolation.
  min_status: 0 # minimum status for a GPS to be valid
  max_sigma_xy: 8 # max xy sigma

odo:
  delta_threshold_s: 1.0 # max time distance to the two measurements for interpolation.

aruco:
  delta_threshold_s: 0.05 # max time distance to associate aruco observations to a state (with a lidar time)
  sigma_alpha: 2 # sigma for an ARUCO measurement. sigma degrees in the three angle rotations
  sigma_xy: 0.05 # sigma for an ARUCO measurement. sigma meters for xy
  sigma_z: 0.1 # sigma for an ARUCO measurement. sigma degrees in the three angle rotations

# the scanmatcher is used for sequential scanmatching and to find registrations between non-consecutive pointclouds
scanmatcher:
  voxel_size: null # Number or null
  # find the closest points within this distance in ICP
  distance_threshold: 10.0


  filter_by_radius:
    max_radius: 50 #100
    min_radius: 0.5  #0.5 para no encontrarse con el robot

  filter_by_height:
    min_height: -1.0
    max_height: 50.0

  normals:
    maximum_neighbors: 300 #50
    radius_normals: 3 #0.5
    voxel_size_normals: null # Number or null

  initial_transform:
    clouds_at_same_z: true

loop_closing:
#  # lazy settings, low number of loop closings
#  d_sample_i: 10.0 # try to find triplets for this relative distance between i poses
#  r_close1: 0.7 # the j index must be within r1 and r2 in travel distance
#  r_close2: 1.5
#  # include indices k that are within r_lc from i (and approximately from j) and r_lc_travel distance from i in terms
#  # of travel distance.
#  r_lc: 3.0 # radius for loop_closing (not travel distance)
#  r_lc_travel_distance: 3.0 # travelled distance for loop closings
#  num_triplets: 1 # num of triplets generated for each triplet at every step index

## medium settings, large number of loop closings, including
#  d_sample_i: 5.0 # try to find triplets for this relative distance between i poses
#  r_close1: 0.7 # the j index must be within r1 and r2 in travel distance
#  r_close2: 1.5
#  # include indices k that are within r_lc from i (and approximately from j) and r_lc_travel distance from i in terms
#  # of travel distance.
#  r_lc: 3.5 # radius for loop_closing (not travel distance)
#  r_lc_travel_distance: 3.0 # travelled distance for loop closings
#  num_triplets: 3 # num of triplets generated for each triplet at every step index

# epic settings, large number of loop closings, including
#  d_sample_i: 2.0 # try to find triplets for this relative distance between i poses
#  r_close1: 0.7 # the j index must be within r1 and r2 in travel distance
#  r_close2: 1.5
#  # include indices k that are within r_lc from i (and approximately from j) and r_lc_travel distance from i in terms
#  # of travel distance.
#  r_lc: 4.5 # radius for loop_closing (not travel distance)
#  r_lc_travel_distance: 3.0 # travelled distance for loop closings
#  num_triplets: 1 # 1 (normal), 5 (epic) num of triplets generated for each triplet at every step index

  d_sample_i: 3.0 # try to find triplets for this relative distance between i poses

  # local context
  r_close_local_1: 2.0 # the j index must be within r1 and r2 in travel distance
  r_close_local_2: 4.0

  # global context
  r_close1: 0.5 # the j index must be within r_close1 and r_close2 in travel distance
  r_close2: 0.7
  # include indices k that are within r_lc from i (and approximately from j) and r_lc_travel distance from i in terms
  # of travel distance.
  r_lc: 3.0 # radius for loop_closing (not travel distance)
  r_lc_travel_distance: 7.5 # travelled distance for loop closings
  num_triplets: 1 # 1 (normal), 5 (epic) num of triplets generated for each triplet at every step index


map_viewer:
  voxel_size: 0.2
  keyframe_sampling: 20

